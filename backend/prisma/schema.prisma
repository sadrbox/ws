// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int     @id @default(autoincrement())
  username   String?
  password   String?
  email      String?
  firstname  String?
  lastname   String?
  middlename String?
  fullname   String?
}

model Organization {
  id                Int               @id @default(autoincrement())
  shortName         String
  displayName       String            @default("")
  bin               String?           @unique
  contracts         Contract[]
  contacts          Contact[]
  activityHistories ActivityHistory[]
}

model Counterparty {
  id          Int        @id @default(autoincrement())
  shortName   String
  displayName String     @default("")
  bin         String?    @unique
  contracts   Contract[]
  contacts    Contact[]
}

model Contract {
  id             Int       @id @default(autoincrement())
  shortName      String
  contractNumber String?
  contractText   String?   @db.Text
  startDate      DateTime?
  endDate        DateTime?

  Organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId Int?
  Counterparty   Counterparty? @relation(fields: [counterpartyId], references: [id])
  counterpartyId Int?
}

model Contact {
  id             Int           @id @default(autoincrement())
  value          String
  contactTypes   ContactType   @relation(fields: [contactTypeId], references: [id])
  contactTypeId  Int
  ownerId        Int
  ownerType      String
  organizationId Int?
  counterpartyId Int?
  Organization   Organization? @relation(fields: [organizationId], references: [id])
  Counterparty   Counterparty? @relation(fields: [counterpartyId], references: [id])
}

model ContactType {
  id        Int       @id @default(autoincrement())
  shortName String
  contacts  Contact[]
}

model ActivityHistory {
  id           Int          @id @default(autoincrement())
  actionDate   DateTime     @default(now())
  actionType   String
  organization Organization @relation(fields: [bin], references: [bin])
  bin          String
  userName     String
  host         String
  ip           String?
  city         String?
  objectId     String
  objectType   String
  objectName   String
  props        Json
}
